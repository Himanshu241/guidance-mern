{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Files/guidance-mern/client/src/widgets/feeds.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport FeedPost from './feedPost';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Feeds = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const questionData = useSelector(state => state.question.questionData);\n  console.log(questionData);\n  const search = async () => {\n    try {\n      console.log(searchTerm);\n      const response = await axios.get(`http://localhost:3001/${searchTerm}/search/`);\n      setSearchResults(response.data);\n      setQuestions(searchResults);\n      console.log(questions);\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n    }\n  };\n  const getQuestions = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/getQuestions/');\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setQuestions(data);\n    } catch (error) {\n      console.error('Error fetching items:', error);\n    }\n  };\n  useEffect(() => {\n    getQuestions();\n  }, [questionData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Search a question\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n          search();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchTerm.length !== 0 ? searchResults.map(question => {\n        return /*#__PURE__*/_jsxDEV(FeedPost, {\n          questionId: question._id,\n          name: question.name,\n          title: question.title,\n          body: question.body,\n          tags: question.tags,\n          createdAt: new Date(question.createdAt),\n          answers: question.answers\n        }, question._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 69\n        }, this);\n      }) : questions.map(question => {\n        return /*#__PURE__*/_jsxDEV(FeedPost, {\n          questionId: question._id,\n          name: question.name,\n          title: question.title,\n          body: question.body,\n          tags: question.tags,\n          createdAt: new Date(question.createdAt),\n          answers: question.answers\n        }, question._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 39\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_s(Feeds, \"9mubsUd5f3N2iU3K4SVrm0aO/0I=\", false, function () {\n  return [useSelector];\n});\n_c = Feeds;\nexport default Feeds;\nvar _c;\n$RefreshReg$(_c, \"Feeds\");","map":{"version":3,"names":["React","useEffect","useState","FeedPost","axios","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Feeds","_s","questions","setQuestions","searchTerm","setSearchTerm","searchResults","setSearchResults","questionData","state","question","console","log","search","response","get","data","error","getQuestions","fetch","ok","Error","status","json","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","length","map","questionId","_id","name","title","body","tags","createdAt","Date","answers","_c","$RefreshReg$"],"sources":["/home/himanshu/Files/guidance-mern/client/src/widgets/feeds.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport FeedPost from './feedPost';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nconst Feeds = () => {\n\n  const [questions, setQuestions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const questionData = useSelector((state)=>state.question.questionData);\n  console.log(questionData);\n  const search = async () => {\n    try {\n      console.log(searchTerm)\n      const response = await axios.get(`http://localhost:3001/${searchTerm}/search/` );\n      setSearchResults(response.data);\n      setQuestions(searchResults);\n      console.log(questions)\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n    }\n  };\n  const getQuestions=async()=>{\n    try {\n      const response = await fetch('http://localhost:3001/getQuestions/');\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n     \n      setQuestions(data);\n    } catch (error) {\n      console.error('Error fetching items:', error);\n\n    } \n  }\n  useEffect(()=>{\n    getQuestions();\n  },[questionData])\n return(\n  <>\n   {/* Question Search Box */}\n   <div className='center-search-container'>\n   \n       \n       <input\n         type=\"text\"\n         className='search-input'\n         placeholder=\"Search a question\"\n         value={searchTerm}\n         onChange={(e) => {setSearchTerm(e.target.value); search();}}\n       />\n       \n     \n   </div>\n\n  <div>{searchTerm.length !==0 ?searchResults.map(question=>{return <FeedPost key={question._id} \n    questionId={question._id}\n    name = {question.name}\n    title={question.title} \n    body={question.body}\n    tags={question.tags}\n    createdAt={new Date(question.createdAt)}\n    answers={question.answers}/>})\n    : questions.map(question=>{return <FeedPost key={question._id} \n      questionId={question._id}\n      name = {question.name}\n      title={question.title} \n      body={question.body}\n      tags={question.tags}\n      createdAt={new Date(question.createdAt)}\n      answers={question.answers}/>})}</div>\n    </>\n  );\n};\n\nexport default Feeds;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}