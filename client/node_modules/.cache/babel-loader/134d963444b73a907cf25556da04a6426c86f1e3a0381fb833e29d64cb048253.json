{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Files/guidance-mern/client/src/scenes/signInPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { setLogin } from '../state';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const validate = values => {\n    const errors = {};\n    if (!values.password) {\n      errors.password = 'Required';\n    }\n    if (!values.email) {\n      errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      errors.email = 'Invalid email address';\n    }\n    return errors;\n  };\n  const handleSubmit = async (e, values, {\n    setSubmitting\n  }) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/login/', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      });\n      const res = await response.json();\n      if (response.status === 401) {\n        console.error(res);\n      } else if (response.status === 200) {\n        dispatch(setLogin({\n          user: res.user,\n          token: res.token\n        }));\n        navigate('/home');\n      }\n    } catch (error) {\n      console.error('Login failed', error);\n    }\n    setSubmitting = false;\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validate: validate,\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"display-2 text-light\",\n          children: \"Sign-In \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: handleSubmit,\n            class: \"btn button btn-primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(SignInForm, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = SignInForm;\nexport default SignInForm;\nvar _c;\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"names":["React","useState","useNavigate","useDispatch","setLogin","Formik","Form","Field","ErrorMessage","jsxDEV","_jsxDEV","SignInForm","_s","navigate","dispatch","initialValues","email","password","validate","values","errors","test","handleSubmit","e","setSubmitting","preventDefault","response","fetch","method","headers","body","JSON","stringify","res","json","status","console","error","user","token","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","class","htmlFor","type","name","component","onClick","_c","$RefreshReg$"],"sources":["/home/himanshu/Files/guidance-mern/client/src/scenes/signInPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { setLogin } from '../state';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nconst SignInForm = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const initialValues = {\n      email :\"\",\n      password :\"\"\n    }\n    const validate = (values)=>{\n      const errors = {};\n\n      \n      if(!values.password){\n        errors.password = 'Required'\n      }\n      if(!values.email){\n        errors.email = 'Required'\n      }else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n      }\n\n      return errors;\n    }\n\n    const handleSubmit = async (e, values, {setSubmitting}) => {\n      e.preventDefault();\n      \n        try {\n          const response = await fetch('http://localhost:3001/login/', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(values),\n          });\n          const res = await response.json();\n          if(response.status === 401){\n            console.error(res);\n          }\n          else if(response.status === 200){\n            \n            dispatch(\n              setLogin({\n                user : res.user,\n                token : res.token\n              })\n            )\n            navigate('/home');\n\n          }\n          \n        } catch (error) {\n          console.error('Login failed', error);\n        }\n        setSubmitting = false;\n    }\n          \n        \n\n  return (\n    <Formik\n    initialValues={initialValues}\n    validate={validate}\n    onSubmit={handleSubmit}\n  >\n    <Form>\n    <div className=\"container mt-5\">\n      <h2 className='display-2 text-light'>Sign-In </h2>\n      <form>\n  \n  <div class=\"mb-3\">\n        <label htmlFor=\"email\">Email</label>\n        <Field type=\"email\" name=\"email\" />\n        <ErrorMessage name=\"email\" component=\"div\" />\n  </div>\n  <div class=\"mb-3\">\n  <label htmlFor=\"password\">Password</label>\n        <Field type=\"password\" name=\"password\" />\n        <ErrorMessage name=\"password\" component=\"div\" />\n  </div>\n  <button type=\"submit\" onClick={handleSubmit} class=\"btn button btn-primary\">Submit</button>\n</form>\n</div>\n</Form>\n  </Formik>\n  );\n};\n\nexport default SignInForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}