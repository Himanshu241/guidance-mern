{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Files/guidance-mern/client/src/widgets/addquestion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddQuestion = ({\n  sharedState,\n  updateSharedState\n}) => {\n  _s();\n  const userId = useSelector(state => state.auth.user._id);\n  const name = useSelector(state => state.auth.user.name);\n  const token = useSelector(state => state.auth.token);\n  const profileImage = useSelector(state => state.auth.user.profileImage);\n  const isLoading = useState(false);\n  const [questionData, setQuestionData] = useState({\n    name: '',\n    title: '',\n    body: '',\n    tags: '',\n    createdBy: '',\n    profileImage: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setQuestionData({\n      ...questionData,\n      [name]: value\n    });\n  };\n  const handleAddQuestion = async () => {\n    try {\n      setIs;\n      // Use the state directly here\n      const updatedQuestionData = {\n        ...questionData,\n        createdBy: userId,\n        name: name,\n        profileImage: profileImage\n      };\n      console.log(updatedQuestionData);\n      const response = await axios.post('http://localhost:3001/question/', updatedQuestionData, {\n        headers: {\n          'Authorization': token\n        }\n      });\n\n      // Handle the response as needed (e.g., show a success message, reset form)\n      console.log('Question added successfully:', response.data);\n      updateSharedState(!sharedState);\n\n      // Reset the form\n      setQuestionData({\n        name: '',\n        title: '',\n        body: '',\n        tags: '',\n        createdBy: '',\n        profileImage: ''\n      });\n    } catch (error) {\n      console.error('Error adding question:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: questionData.title,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Body:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"body\",\n          value: questionData.body,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tags (comma-separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"tags\",\n          value: questionData.tags,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success add-question\",\n        type: \"button\",\n        onClick: handleAddQuestion,\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AddQuestion, \"I8f72B6wJLwW+dKR6yVMhb8KoAo=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n_c = AddQuestion;\nexport default AddQuestion;\nvar _c;\n$RefreshReg$(_c, \"AddQuestion\");","map":{"version":3,"names":["React","useState","axios","useSelector","jsxDEV","_jsxDEV","AddQuestion","sharedState","updateSharedState","_s","userId","state","auth","user","_id","name","token","profileImage","isLoading","questionData","setQuestionData","title","body","tags","createdBy","handleInputChange","e","value","target","handleAddQuestion","setIs","updatedQuestionData","console","log","response","post","headers","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","className","onClick","_c","$RefreshReg$"],"sources":["/home/himanshu/Files/guidance-mern/client/src/widgets/addquestion.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nconst AddQuestion = ({sharedState, updateSharedState}) => {\n\nconst userId = useSelector((state)=>state.auth.user._id);  \nconst name = useSelector((state)=>state.auth.user.name);\nconst token = useSelector((state)=>state.auth.token);\nconst profileImage = useSelector((state)=>state.auth.user.profileImage);\nconst isLoading = useState(false);\n  const [questionData, setQuestionData] = useState({\n    name:'',\n    title: '',\n    body: '',\n    tags: '',\n    createdBy: '',\n    profileImage:''\n  });\n\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setQuestionData({ ...questionData, [name]: value });\n  };\n\n  const handleAddQuestion = async () => {\n    try {\n      setIs\n      // Use the state directly here\n      const updatedQuestionData = {\n        ...questionData,\n        createdBy: userId,\n        name: name,\n        profileImage:profileImage\n      };\n  \n      console.log(updatedQuestionData);\n  \n      const response = await axios.post('http://localhost:3001/question/', updatedQuestionData,{\n        headers:{\n          'Authorization': token\n        }\n      });\n      \n    \n      \n      // Handle the response as needed (e.g., show a success message, reset form)\n      console.log('Question added successfully:', response.data);\n      updateSharedState(!sharedState);\n  \n      // Reset the form\n      setQuestionData({\n        name: '',\n        title: '',\n        body: '',\n        tags: '',\n        createdBy: '',\n        profileImage:''\n       \n      });\n    } catch (error) {\n      console.error('Error adding question:', error);\n      \n    }\n\n  };\n  \n\n  return (\n    <div>\n      <h2>Add a New Question</h2>\n      <form>\n        <div>\n          <label>Title:</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={questionData.title}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label>Body:</label>\n          <textarea\n            name=\"body\"\n            value={questionData.body}\n            onChange={handleInputChange}\n          />\n        </div>\n        <div>\n          <label>Tags (comma-separated):</label>\n          <input\n            type=\"text\"\n            name=\"tags\"\n            value={questionData.tags}\n            onChange={handleInputChange}\n          />\n        </div>\n        <button className='btn btn-success add-question' type=\"button\" onClick={handleAddQuestion}>\n          Add Question\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddQuestion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}