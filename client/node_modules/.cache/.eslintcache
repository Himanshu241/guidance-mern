[{"/home/himanshu/Files/guidance-mern/client/src/index.js":"1","/home/himanshu/Files/guidance-mern/client/src/App.js":"2","/home/himanshu/Files/guidance-mern/client/src/scenes/signUpPage.jsx":"3","/home/himanshu/Files/guidance-mern/client/src/scenes/intro.jsx":"4","/home/himanshu/Files/guidance-mern/client/src/scenes/signInPage.jsx":"5","/home/himanshu/Files/guidance-mern/client/src/scenes/home.jsx":"6","/home/himanshu/Files/guidance-mern/client/src/state/index.js":"7","/home/himanshu/Files/guidance-mern/client/src/state/store.js":"8","/home/himanshu/Files/guidance-mern/client/src/state/rootReducer.js":"9","/home/himanshu/Files/guidance-mern/client/src/widgets/feeds.jsx":"10","/home/himanshu/Files/guidance-mern/client/src/widgets/Foot.jsx":"11","/home/himanshu/Files/guidance-mern/client/src/widgets/navbar.jsx":"12","/home/himanshu/Files/guidance-mern/client/src/widgets/feedPost.jsx":"13","/home/himanshu/Files/guidance-mern/client/src/widgets/addquestion.jsx":"14","/home/himanshu/Files/guidance-mern/client/src/widgets/answerwidget.jsx":"15","/home/himanshu/Files/guidance-mern/client/src/scenes/myquestions.jsx":"16","/home/himanshu/Files/guidance-mern/client/src/scenes/registration.jsx":"17","/home/himanshu/Files/guidance-mern/client/src/scenes/profile.jsx":"18","/home/himanshu/Files/guidance-mern/client/src/scenes/mentorPage.jsx":"19"},{"size":538,"mtime":1700024846907,"results":"20","hashOfConfig":"21"},{"size":1389,"mtime":1700880702106,"results":"22","hashOfConfig":"21"},{"size":4176,"mtime":1700882121061,"results":"23","hashOfConfig":"21"},{"size":1014,"mtime":1700311959817,"results":"24","hashOfConfig":"21"},{"size":3520,"mtime":1700881917896,"results":"25","hashOfConfig":"21"},{"size":640,"mtime":1700456126371,"results":"26","hashOfConfig":"21"},{"size":550,"mtime":1700026000644,"results":"27","hashOfConfig":"21"},{"size":565,"mtime":1700025220790,"results":"28","hashOfConfig":"21"},{"size":246,"mtime":1700280925282,"results":"29","hashOfConfig":"21"},{"size":4458,"mtime":1700828985506,"results":"30","hashOfConfig":"21"},{"size":1251,"mtime":1700880940845,"results":"31","hashOfConfig":"21"},{"size":1267,"mtime":1700882446753,"results":"32","hashOfConfig":"21"},{"size":4921,"mtime":1700828308597,"results":"33","hashOfConfig":"21"},{"size":3721,"mtime":1700829898721,"results":"34","hashOfConfig":"21"},{"size":1468,"mtime":1700538341175,"results":"35","hashOfConfig":"21"},{"size":1393,"mtime":1700450729525,"results":"36","hashOfConfig":"21"},{"size":2433,"mtime":1700371393278,"results":"37","hashOfConfig":"21"},{"size":5564,"mtime":1700542417651,"results":"38","hashOfConfig":"21"},{"size":2869,"mtime":1700542411449,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"8qvmki",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"43"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/home/himanshu/Files/guidance-mern/client/src/index.js",[],[],["105"],"/home/himanshu/Files/guidance-mern/client/src/App.js",["106"],[],"import {BrowserRouter, Navigate, Routes, Route} from 'react-router-dom';\nimport SignupForm from './scenes/signUpPage.jsx';\nimport Intro from './scenes/intro.jsx'\nimport SigninForm from './scenes/signInPage.jsx';\nimport './App.css'\nimport Home from './scenes/home.jsx';\nimport MyQuestions from './scenes/myquestions.jsx';\nimport Registration from './scenes/registration.jsx';\nimport Profile from './scenes/profile.jsx';\nimport { useSelector } from 'react-redux/es/hooks/useSelector.js';\nimport MentorPage from './scenes/mentorPage.jsx';\n\n\nfunction App() {\n  const isAuth = Boolean(useSelector((state)=> state.auth.token));\n\n  return (\n    <>\n    <div className='app' >\n    \n      <BrowserRouter>\n        \n        <Routes>\n        <Route path=\"/home\" element={isAuth ? <Home/> : <Intro/>}></Route>\n            <Route path=\"/\" element={<Intro/>}></Route>\n            <Route path=\"/signUp\" element={<SignupForm/>}></Route>\n            <Route path=\"/signIn\" element={<SigninForm/>}></Route>\n            <Route path='/myQuestions' element={<MyQuestions/>}></Route>\n            <Route path='/registrationPage' element={<Registration/>}></Route>\n            <Route path='/profilePage' element={<Profile/>}></Route>\n            <Route path='/mentorPage' element={<MentorPage/>}></Route>\n        </Routes>\n       \n      </BrowserRouter> \n      \n     \n    </div>\n    </> \n  );\n}\n\nexport default App;\n","/home/himanshu/Files/guidance-mern/client/src/scenes/signUpPage.jsx",["107"],[],"/home/himanshu/Files/guidance-mern/client/src/scenes/intro.jsx",[],[],"/home/himanshu/Files/guidance-mern/client/src/scenes/signInPage.jsx",[],[],"/home/himanshu/Files/guidance-mern/client/src/scenes/home.jsx",["108","109"],[],"import React from 'react';\nimport Feeds from '../widgets/feeds';\nimport Foot from '../widgets/Foot';\nimport AddQuestion from '../widgets/addquestion';\nimport Navbar from '../widgets/navbar';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nfunction Home() {\n  const profile = useSelector((state)=>state.auth.user.profileImage);\n  console.log(profile)\n  \n  return (\n    <>\n    <Navbar/>\n   \n    {/* Main body */}\n    <div>\n    {/* Feeds section */}\n    <Feeds/>  \n\n    {/* Add question button and overlay form */}\n   \n\n    \n\n      {/* Footer section */}\n    <Foot/>\n    </div>\n    </>\n  )\n}\n\nexport default Home;","/home/himanshu/Files/guidance-mern/client/src/state/index.js",[],[],"/home/himanshu/Files/guidance-mern/client/src/state/store.js",[],[],"/home/himanshu/Files/guidance-mern/client/src/state/rootReducer.js",[],[],"/home/himanshu/Files/guidance-mern/client/src/widgets/feeds.jsx",["110"],[],"// Feeds.jsx\nimport React, { useEffect, useState } from 'react';\nimport FeedPost from './feedPost';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\nimport { useNavigate } from 'react-router-dom';\nimport AddQuestion from './addquestion';\nconst Feeds = () => {\n  const [questions, setQuestions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [newQuestionFlag, setNewQuestionFlag] = useState(false); \n  const [newAnswerFlag, setNewAnswerFlag] = useState(false); \n  // State to track new questions\n  const token = useSelector((state) => state.auth.token);\n  const navigate = useNavigate();\n\n  const search = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3001/${searchTerm}/search/`, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      setSearchResults(response.data);\n      setQuestions(searchResults);\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n    }\n  };\n\n \n\n  const myQuestionsPage = () => {\n    navigate('/myQuestions');\n  };\n\n  // Use useEffect to fetch new questions when newQuestionFlag changes\n  useEffect(() => {\n    const getQuestions = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/getQuestions/', {\n          headers: {\n            'Authorization': token\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setQuestions(data);\n      } catch (error) {\n        console.error('Error fetching items:', error);\n      }\n    };\n    getQuestions();\n  }, [newQuestionFlag, newAnswerFlag]);\n\n  const handleNewQuestionAdded = () => {\n    // Trigger a re-fetch of questions by updating newQuestionFlag\n    setNewQuestionFlag((prevFlag) => !prevFlag);\n  };\n  const handleNewAnswerAdded=()=>{\n    setNewAnswerFlag((prevState)=>!prevState);\n  }\n  const [showOverlay, setShowOverlay] = useState(false);\n  \n \n  \n  const toggleOverlay = () => {\n    setShowOverlay(!showOverlay);\n  }\n  \n  return(\n    <>\n     {/* Question Search Box */}\n     <div className='center-search-container'>\n     \n     <div class=\"container-1\">\n<div class=\"search-container\">\n  <input class=\"input\" type=\"text\" placeholder=\"Search a question\"\n           value={searchTerm}\n           onChange={(e) => {setSearchTerm(e.target.value); search();}}/>\n  <svg viewBox=\"0 0 24 24\" class=\"search__icon\">\n    <g>\n      <path d=\"M21.53 20.47l-3.66-3.66C19.195 15.24 20 13.214 20 11c0-4.97-4.03-9-9-9s-9 4.03-9 9 4.03 9 9 9c2.215 0 4.24-.804 5.808-2.13l3.66 3.66c.147.146.34.22.53.22s.385-.073.53-.22c.295-.293.295-.767.002-1.06zM3.5 11c0-4.135 3.365-7.5 7.5-7.5s7.5 3.365 7.5 7.5-3.365 7.5-7.5 7.5-7.5-3.365-7.5-7.5z\">\n      </path>\n    </g>\n  </svg>\n</div>\n</div> \n     </div>\n     <button type='button' className='adjust fixed-button-2 btn btn-primary' onClick={myQuestionsPage}>My Questions</button>\n\n    <div>{searchTerm.length !==0 ?searchResults.map(question=>{return <FeedPost key={question._id} \n      questionId={question._id}\n      name = {question.name}\n      title={question.title} \n      body={question.body}\n      tags={question.tags}\n      createdAt={new Date(question.createdAt)}\n      profileImage = {question.profileImage}\n      answers={question.answers}\n      showLogo={question.isMentor}\n      handleNewAnswerAdded={handleNewAnswerAdded}/>})\n      : questions.map(question=>{return <FeedPost key={question._id} \n        questionId={question._id}\n        name = {question.name}\n        title={question.title} \n        body={question.body}\n        tags={question.tags}\n        createdAt={new Date(question.createdAt)}\n        profileImage = {question.profileImage}\n        answers={question.answers}\n        showLogo={question.isMentor}\n        handleNewAnswerAdded={handleNewAnswerAdded}/>})}</div>\n        <button type='button' className='adjust fixed-button btn btn-primary' onClick={toggleOverlay}>ADD A QUESTION</button>\n    \n    {showOverlay && (\n      <div className=\"overlay\">\n        <div className=\"overlay-content\">\n        <AddQuestion handleNewQuestionAdded={handleNewQuestionAdded}/> \n        <button type='button' className='close btn btn-danger' onClick={toggleOverlay}>Close</button>\n        </div>\n      </div>\n    )}\n      </>\n    );\n};\n\nexport default Feeds;\n","/home/himanshu/Files/guidance-mern/client/src/widgets/Foot.jsx",["111","112","113","114"],[],"// foot.js\nimport React from 'react';\n\n\nfunction Foot() {\n  return (\n    <>\n      <div className=\"footer\">\n        <div className=\"col-1\">\n          <h3> LINKS</h3>\n          <a href=\"#\">ABOUT</a>\n          <a href=\"#\">CONTACT</a>\n          <a href=\"#\">TERMS AND SERVICES </a>\n          <a href=\"#\">HELP</a>\n        </div>\n        <div className=\"col-2\">\n          <h3>NEWSLETTER</h3>\n          <form>\n            <input\n              type=\"email\"\n              placeholder=\"Enter your Email\"\n              style={{ backgroundColor: 'white' }}\n              required\n            />\n            <br />\n            <br />\n            <button type=\"button\">SUBSCRIBE NOW</button>\n          </form>\n        </div>\n        <div className=\"col-3\">\n          <h3>CONTACT</h3>\n          <p>\n            123, xyz ROAD <br />\n            SHIMLA, HIMACHAL PRADESH\n          </p>\n          <div className=\"social-icon\">\n            <i className=\"fa-brands fa-facebook\" />\n            <i className=\"fa-brands fa-x-twitter\" />\n            <i className=\"fa-brands fa-instagram\" />\n            <i className=\"fa-brands fa-linkedin\" />\n            <i className=\"fa-brands fa-youtube\" />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Foot;\n","/home/himanshu/Files/guidance-mern/client/src/widgets/navbar.jsx",["115","116","117","118"],[],"/home/himanshu/Files/guidance-mern/client/src/widgets/feedPost.jsx",["119"],[],"import React, { useState} from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport AnswerWidget from './answerwidget';\nfunction FeedPost({ questionId, name, title, body, tags, createdAt, answers, showLogo, handleNewAnswerAdded}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [answer, setAnswer] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const userId = useSelector((state) => state.auth.user._id);\n  const userName = useSelector((state) => state.auth.user.name);\n  const token = useSelector((state)=>state.auth.token);\n  const isMentor = useSelector((state)=>state.auth.user.isMentor);\n  const profileImage = useSelector((state)=>state.auth.user.profileImage);\n  const [displayedAnswers, setDisplayedAnswers] = useState(2);\n\n\n  const toggleDiv = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleInputChange = (e) => {\n    setAnswer(e.target.value);\n  };\n\n  const id = questionId;\n\n  const addAnswer = async (id, answerData) => {\n    try {\n      setIsLoading(true);\n      const response = await axios.post(`http://localhost:3001/question/${id}/answer`, answerData, {\n        headers: {\n          'Authorization': token\n        }\n      });\n\n      // Handle the response as needed\n      console.log('Answer added successfully:', response.data);\n      handleNewAnswerAdded();\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error adding answer:', error);\n      // Handle error (e.g., show an error message)\n    }\n  };\n\n  const handleAnswer = async (e) => {\n    e.preventDefault();\n    await addAnswer(id, { body: answer, name: userName, createdBy: userId ,profileImage:profileImage,isMentor:isMentor});\n    setIsOpen(!isOpen);\n  };\n\n  const handleFullPost = () => {\n    setDisplayedAnswers(displayedAnswers + 2); \n  };\n\n  return (\n    <div className='center-container'>\n      <div className=\"card w-75 text-center mb-1\">\n        \n         {/* green tick  */}\n         {showLogo && (\n            <div style={{ position: 'absolute', top: '0', right: '0', marginRight: '10px', marginTop: '10px' }}>\n              <div className=\"green-tick-container\">\n                <div className=\"green-tick\">\n                  <div className=\"tick-icon\">&#10004;</div>\n                </div>\n              </div>\n              <div style={{ color: 'green', fontSize: '14px' }}>Mentor</div>\n            </div>\n          )}\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n        {profileImage && (\n        <img\n          src={`http://localhost:3001${profileImage}`}\n          alt=\"Profile\"\n          style={{ width: '70px', height: '70px', borderRadius: '50%' }}\n        />\n      )}\n          <h3 className='font-weight-bold text-uppercase'>{name}</h3>\n        </div>\n        <div className=\"card-header font-weight-bold\">{title}</div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{body}</h5>\n          <h3 className='font-weight-bold text-uppercase'>Answers</h3>\n          {answers.slice(0, displayedAnswers).map((answer, index) => (\n            <span key={index}>\n              <AnswerWidget name={answer.name} body={answer.body} createdAt={new Date(answer.createdAt)} profileImage={answer.profileImage} showLogo={answer.isMentor}/>\n            </span>\n          ))}\n          {answers.length > displayedAnswers && (\n            <button onClick={handleFullPost} className=\"btn btn-link mb-1\">\n              Show more answers..\n            </button>\n          )}\n          <div>\n            <button onClick={toggleDiv} className=\"btn btn-success\">\n              Add an Answer\n            </button>\n            {isOpen && (\n              <div className=\"slide-down-container\">\n                <form>\n                  <label>\n                    Enter your answer:\n                    <textarea type=\"text\" value={answer} onChange={handleInputChange} />\n                  </label>\n                  <button onClick={handleAnswer} className='btn btn-primary'>Submit</button>\n                </form>\n                {isLoading && <div class=\"spinner center\">\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n</div>}\n              </div>\n            )}\n          </div>\n        </div>\n        <div>{tags.map((tag, index) => <a key={index} href=\"#\" className=\"badge badge-secondary m-1\">{tag}</a>)}</div>\n        <div className=\"card-footer text-muted\">{createdAt.toLocaleString()}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default FeedPost;\n","/home/himanshu/Files/guidance-mern/client/src/widgets/addquestion.jsx",[],[],"/home/himanshu/Files/guidance-mern/client/src/widgets/answerwidget.jsx",[],[],"/home/himanshu/Files/guidance-mern/client/src/scenes/myquestions.jsx",["120"],[],"import React, { useState } from 'react'\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport {  useSelector } from 'react-redux/es/hooks/useSelector';\nimport FeedPost from '../widgets/feedPost';\nimport Navbar from '../widgets/navbar';\nconst MyQuestions= () =>{\n    const name = useSelector((state)=>state.auth.user.name);\n    const [myQuestions, setMyQuestions] = useState([]);\n    const token = useSelector((state)=>state.auth.token)\n    useEffect(()=>{\n        const showMyQuestions = async()=>{\n            try {\n              const response = await axios.get(`http://localhost:3001/questions/${name}`,{\n                headers:{\n                  'Authorization':token\n                }\n              });\n              setMyQuestions(response.data);\n              console.log(myQuestions)\n            } catch (error) {\n              console.log(error);\n            }\n          };\n          showMyQuestions();\n    \n    },[])\n    \n  return (\n    <>\n      <Navbar/>\n      <div className='myQuestions-container'>\n        {myQuestions.map(question=>{return <FeedPost key={question._id} \n        questionId={question._id}\n        name = {question.name}\n        title={question.title} \n        body={question.body}\n        tags={question.tags}\n        createdAt={new Date(question.createdAt)}\n        answers={question.answers}/>})\n}\n</div>\n\n</>\n  )}; \n\nexport default MyQuestions","/home/himanshu/Files/guidance-mern/client/src/scenes/registration.jsx",[],[],"/home/himanshu/Files/guidance-mern/client/src/scenes/profile.jsx",["121"],[],"import React from 'react'\nimport Navbar from '../widgets/navbar'\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nfunction Profile() {\n    const userId = useSelector((state)=>state.auth.user._id);\n    const name = useSelector((state)=>state.auth.user.name);\n    const email = useSelector((state)=>state.auth.user.email);\n    const showLogo = useSelector((state)=>state.auth.user.isMentor);\n    const occupation = useSelector((state)=>state.auth.user.occupation);\n    const profileImage = useSelector((state)=>state.auth.user.profileImage)\n    const bio = useSelector((state)=>state.auth.user.bio)\n\n    const [isLoading, setIsLoading] = useState(false);\n    const token = useSelector((state)=>state.auth.token);\n    const [updateStatus, setUpdateStatus] = useState('');\n    const [userData, setUserData] = useState({\n        name: name,\n        email: email,\n        occupation: occupation,\n        profileImage: null,\n        bio:bio\n      });\n    \n      const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setUserData({ ...userData, [name]: value });\n      };\n    \n      const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        setUserData({ ...userData, profileImage: file });\n      };\n    \n      const handleUpdateProfile = async () => {\n        setIsLoading(true);\n        const formData = new FormData();\n    \n        Object.keys(userData).forEach((key) => {\n          formData.append(key, userData[key]);\n        });\n    \n        try {\n          const response = await axios.put(`http://localhost:3001/users/${userId}`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization':token\n            },\n          });\n    if(response.status === 200){\n        setUpdateStatus('Updated Successfully');\n        setIsLoading(false);\n    }\n          console.log('User profile updated successfully!');\n        } catch (error) {\n          console.error('Error updating user profile:', error);\n          setIsLoading(false);\n        }\n      };\n\n  return (\n    <>\n    <Navbar/>\n\n    {/* Update Section */}\n    {/* green tick  */}\n    {showLogo && (\n            <div style={{zIndex:'111', position: 'absolute', top: '0', right: '0', marginRight: '10px', marginTop: '10px' }}>\n              <div className=\"green-tick-container\">\n                <div className=\"green-tick\">\n                  <div className=\"tick-icon\">&#10004;</div>\n                </div>\n              </div>\n              <div style={{ color: 'green', fontSize: '14px' }}>Mentor</div>\n            </div>\n          )}\n\n \n    <div className='update-container center-container-update'>\n      \n      <h2 className='upload-title mb-5'>Update Profile</h2>\n       \n      <label className='update-label'>Profile Image:</label>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <div\n          style={{\n            width: '50px',\n            height: '50px',\n            borderRadius: '50%',\n            overflow: 'hidden',\n            marginRight: '10px',\n          }}\n        >\n          {userData.profileImage && (\n            <img\n              src={URL.createObjectURL(userData.profileImage)}\n              alt=\"Profile\"\n              style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n            />\n          )}\n        </div>\n        <label\n          htmlFor=\"profileImageInput\"\n          style={{\n            cursor: 'pointer',\n            padding: '10px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            borderRadius: '5px',\n          }}\n        >\n          Choose Image\n        </label>\n        <input\n          type=\"file\"\n          id=\"profileImageInput\"\n          name=\"profileImage\"\n          style={{ display: 'none' }}\n          onChange={handleFileChange}\n          \n        />\n      </div>\n      <br/>\n      <label className='update-label'>Name :  </label>\n      <input className='search-input' style={{marginBottom:'3%'}} type=\"text\" name=\"name\" value={userData.name} onChange={handleInputChange} />\n      <br />\n\n      <label className='update-label'>Email :  </label>\n      <input className='search-input' style={{marginBottom:'3%'}} type=\"text\" name=\"email\" value={userData.email} onChange={handleInputChange} />\n      <br />\n\n      \n\n      <label className='update-label'>Occupation :  </label>\n      <input className='search-input' style={{marginBottom:'3%'}} type=\"text\" name=\"occupation\" value={userData.occupation} onChange={handleInputChange} />\n      <br />\n      <label className='update-label'>Bio :  </label>\n      <textarea className='search-input' style={{marginBottom:'3%'}} value={userData.bio} type=\"text\" name=\"bio\"  onChange={handleInputChange} />\n      <br />\n\n      <button  className=' shadow__btn' onClick={handleUpdateProfile}>Update Profile</button>\n      <div style={{marginTop:'4%'}}>\n      {isLoading && <div class=\"spinner center\">\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n    <div class=\"spinner-blade\"></div>\n</div>}\n     \n    <p className='display-upload-text'>{updateStatus}</p>\n  </div>\n    </div>\n    \n  \n  \n    </>\n  )\n}\n\nexport default Profile","/home/himanshu/Files/guidance-mern/client/src/scenes/mentorPage.jsx",[],[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":24,"nodeType":"126","messageId":"127","endLine":1,"endColumn":32},{"ruleId":"124","severity":1,"message":"128","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"129","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":19},{"ruleId":"124","severity":1,"message":"128","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":18},{"ruleId":"130","severity":1,"message":"131","line":57,"column":6,"nodeType":"132","endLine":57,"endColumn":38,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":11,"column":11,"nodeType":"136","endLine":11,"endColumn":23},{"ruleId":"134","severity":1,"message":"135","line":12,"column":11,"nodeType":"136","endLine":12,"endColumn":23},{"ruleId":"134","severity":1,"message":"135","line":13,"column":11,"nodeType":"136","endLine":13,"endColumn":23},{"ruleId":"134","severity":1,"message":"135","line":14,"column":11,"nodeType":"136","endLine":14,"endColumn":23},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":28,"column":54,"nodeType":"136","endLine":28,"endColumn":80},{"ruleId":"134","severity":1,"message":"135","line":31,"column":53,"nodeType":"136","endLine":31,"endColumn":86},{"ruleId":"134","severity":1,"message":"135","line":34,"column":54,"nodeType":"136","endLine":34,"endColumn":94},{"ruleId":"134","severity":1,"message":"135","line":126,"column":40,"nodeType":"136","endLine":126,"endColumn":102},{"ruleId":"130","severity":1,"message":"137","line":27,"column":7,"nodeType":"132","endLine":27,"endColumn":9,"suggestions":"138"},{"ruleId":"124","severity":1,"message":"139","line":12,"column":11,"nodeType":"126","messageId":"127","endLine":12,"endColumn":23},"no-new-object",["140"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'AddQuestion' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["141"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'myQuestions', 'name', and 'token'. Either include them or remove the dependency array.",["142"],"'profileImage' is assigned a value but never used.","no-object-constructor",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [newQuestionFlag, newAnswerFlag, token]",{"range":"147","text":"148"},"Update the dependencies array to be: [myQuestions, name, token]",{"range":"149","text":"150"},[1759,1791],"[newQuestionFlag, newAnswerFlag, token]",[940,942],"[myQuestions, name, token]"]